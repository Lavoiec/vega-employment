dfm_books <- dfm(books) %>% dfm_tolower()
f <- as.matrix(dfm_books)
f
# We have a matrix where each book is a vector.
word_prob <- function(word_mat, word) {
word_freq <- word_mat[,word]
doc_freq <- apply(word_mat,1,sum )
word_freq / doc_freq
}
p <- word_prob(f, "and")
f %>% word_prob("sense")
book_similarities <- textstat_simil(dfm_books, method="cosine")
book_similarities
dfm_books <- dfm(books, remove = stopwords("english")) %>% dfm_tolower()
f <- as.matrix(dfm_books)
f
word_prob <- function(word_mat, word) {
word_freq <- word_mat[,word]
doc_freq <- apply(word_mat,1,sum )
word_freq / doc_freq
}
p <- word_prob(f, "and")
f %>% word_prob("sense")
book_similarities <- textstat_simil(dfm_books, method="cosine")
book_similarities
library(quanteda)
library(janeaustenr)
library(tidyverse)
books <- austen_books() %>%
group_by(book) %>%
summarize(
text = paste(text, collapse=" ")
) %>%
corpus()
# We can run a summary on these babies already.
book_info <- summary(books)
book_info %>% arrange(desc(Sentences)) %>% ggplot(aes(x=book, y=Sentences)) + geom_col()
dfm_books <- dfm(books, remove = stopwords("english")) %>% dfm_tolower()
f <- as.matrix(dfm_books)
# We have a matrix where each book is a vector.
word_prob <- function(word_mat, word) {
word_freq <- word_mat[,word]
doc_freq <- apply(word_mat,1,sum )
word_freq / doc_freq
}
p <- word_prob(f, "and")
f %>% word_prob("sense")
book_similarities <- textstat_simil(dfm_books, method="cosine")
book_similarities
library(quanteda)
library(janeaustenr)
library(tidyverse)
books <- austen_books() %>%
group_by(book) %>%
summarize(
text = paste(text, collapse=" ")
) %>%
corpus()
# We can run a summary on these babies already.
book_info <- summary(books)
book_info %>% arrange(desc(Sentences)) %>% ggplot(aes(x=book, y=Sentences)) + geom_col()
dfm_books <- dfm(books, remove = stopwords("english")) %>% dfm_tolower()
f <- as.matrix(dfm_books)
# We have a matrix where each book is a vector.
word_prob <- function(word_mat, word) {
word_freq <- word_mat[,word]
doc_freq <- apply(word_mat,1,sum )
word_freq / doc_freq
}
p <- word_prob(f, "and")
f %>% word_prob("sense")
book_similarities <- textstat_simil(dfm_books, method="cosine")
book_similarities
library(quanteda)
library(janeaustenr)
library(tidyverse)
books <- austen_books() %>%
group_by(book) %>%
summarize(
text = paste(text, collapse=" ")
) %>%
corpus()
# We can run a summary on these babies already.
book_info <- summary(books)
book_info %>% arrange(desc(Sentences)) %>% ggplot(aes(x=book, y=Sentences)) + geom_col()
dfm_books <- dfm(books, remove = stopwords("english"), remove_punct=TRUE, remove_numbers=TRUE) %>% dfm_tolower()
f <- as.matrix(dfm_books)
# We have a matrix where each book is a vector.
word_prob <- function(word_mat, word) {
word_freq <- word_mat[,word]
doc_freq <- apply(word_mat,1,sum)
word_freq / doc_freq
}
p <- word_prob(f, "and")
f %>% word_prob("sense")
##### Negative Sampling #####
feat_names <- dfm_books["text1",] %>% featnames()
book_1 <- dfm_books["text1",] %>% as.vector()
names(book_1) <- feat_names
# For negative samples
prob_draw <- book_1^0.75 / sum(book_1)^0.75
negative_sample <- function(target_word,size) {
new_prob_draw <- prob_draw[!target_word %in% prob_draw]
sample(names(new_prob_draw), size, prob=new_prob_draw)
}
negative_sample("excellent",5)
##### Sigmoid Similarity #####
sigmoid_similarity <- function(target, context) {
# Both should be dx1 vectors
dot <- t(target) %*% context
1/(1 + exp(-1*dot))
}
book_info
book_1[1,1:5]
books[1,1:5]
books$documents["text1", 1:5]
books$documents["text1", 1]
raw_text <- books$documents["text1", 1]
raw_text <- books$documents["text1", 1] %>% tokens()
raw_text
raw_text <- raw_text %>% str_replace(".", "END")
raw_text
raw_text <- books$documents["text1", 1] %>% tokens()
raw_text <- raw_text %>% str_replace("\.", "END")
raw_text <- books$documents["text1", 1] %>% tokens()
raw_text <- raw_text %>% str_replace("\.", "END")
raw_text <- raw_text %>% str_replace("\\.", "END")
raw_text
raw_text[3:7]
raw_text[6:10]
raw_text[100:104]
target_context_matrix <- matrix(length(raw_text), (2*window+1))
select_window <- function(index, window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in window:length(raw_text)) {
target_context_matrix[i,] <- raw_text[i-window,i+window]
}
}
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in window:length(raw_text)) {
target_context_matrix[i,] <- raw_text[i-window,i+window]
}
}
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in window:length(raw_text)) {
target_context_matrix[i,] <- raw_text[i-window,i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):length(raw_text)) {
target_context_matrix[i,] <- raw_text[i-window,i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window)) {
target_context_matrix[i,] <- raw_text[i-window,i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window(2)
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[i-window,i+window]
}
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[i-window,i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
source('E:/Documents/Data-Analysis-Random/playing with quand-eda.R')
source('E:/Documents/Data-Analysis-Random/playing with quand-eda.R')
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window):(length(raw_text)-window)) {
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window)) {
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
2*2+1
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
print(i)
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
print(i)
print(dim(target_context_matrix))
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
length(raw_text)
print(target_context_matrix)
select_window <- function(window) {
target_context_matrix <- matrix(length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
print(i)
print(target_context_matrix)
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
print(i)
print(target_context_matrix)
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
print(i)
print(raw_text[i-window:i+window])
target_context_matrix[i,] <- raw_text[i-window:i+window]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
print(i)
print(raw_text[i-window:i+window])
target_context_matrix[i,] <- raw_text[(i-window):(i+window)]
}
return(target_context_matrix)
}
select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[(i-window):(i+window)]
}
return(target_context_matrix)
}
select_window(2)
f <- select_window(2)
f[1:5,]
f[-1:-5,]
raw_text <- books$documents["text1", 1] %>% tokens(remove_punct=TRUE, remove_numbers=TRUE)
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[(i-window):(i+window)]
}
return(target_context_matrix)
}
f <- select_window(2)
raw_text
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[(i-window):(i+window)]
}
return(target_context_matrix)
}
f <- select_window(2)
f <- select_window(2)
raw_text
raw_text[1:5]
is.vector(raw_text)
raw_text <- books$documents["text1", 1] %>% tokens(remove_punct=TRUE, remove_numbers=TRUE) %>% as.vector()
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[(i-window):(i+window)]
}
return(target_context_matrix)
}
f <- select_window(2)
is.vector(raw_text)
raw_text
raw_text <- books$documents["text1", 1] %>% tokens(remove_punct=TRUE, remove_numbers=TRUE)
raw_text$text1
raw_text <- raw_text$text1
select_window <- function(window) {
target_context_matrix <- matrix(0,length(raw_text), (2*window+1))
for (i in (window+1):(length(raw_text)-window-1)) {
target_context_matrix[i,] <- raw_text[(i-window):(i+window)]
}
return(target_context_matrix)
}
f <- select_window(2)
f
f[-1]
f[-1,]
tail(f)
f <- select_window(3)
tail(f)
f <- select_window(2)
f
head(f)
test <- c("sense", "and", "sensibility", "by", "jane", "austen")
test
test[1]
test <- -2:2
test
floor(test)
floor(test,1)
index[index<0] <- NA
test[test<0] <- NA
test
raw_text[test]
test[test<0|test>1] <- NA
test
test
replace(test, NA, " ")
replace(test, NA, 2)
replace_na(test, " ")
select_window <- function(window) {
target_context_matrix <- matrix(" ",length(raw_text), (2*window+1))
for (i in 1:(length(raw_text))) {
index <- (i-window):(i+window)
index[index<0|index>length(raw_text)] <- NA
target_context_matrix[i,] <- raw_text[(i-window):(i+window)]
}
target_context_matrix <- replace_na(target_context_matrix, " ")
return(target_context_matrix)
}
f <- select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(" ",length(raw_text), (2*window+1))
for (i in 1:(length(raw_text))) {
index <- (i-window):(i+window)
index[index<0|index>length(raw_text)] <- NA
target_context_matrix[i,] <- raw_text[index]
}
target_context_matrix <- replace_na(target_context_matrix, " ")
return(target_context_matrix)
}
f <- select_window(2)
for (i in 1:(length(raw_text))) {
index <- (i-window):(i+window)
index[index<0|index>length(raw_text)] <- NA
target_context_matrix[i,] <- raw_text[index]
print(index)
}
select_window <- function(window) {
target_context_matrix <- matrix(" ",length(raw_text), (2*window+1))
for (i in 1:(length(raw_text))) {
index <- (i-window):(i+window)
index[index<0|index>length(raw_text)] <- NA
target_context_matrix[i,] <- raw_text[index]
print(index)
}
target_context_matrix <- replace_na(target_context_matrix, " ")
return(target_context_matrix)
}
f <- select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(" ",length(raw_text), (2*window+1))
for (i in 1:(length(raw_text))) {
index <- (i-window):(i+window)
index[index<0|index>length(raw_text)] <- NA
print(index)
target_context_matrix[i,] <- raw_text[index]
}
target_context_matrix <- replace_na(target_context_matrix, " ")
return(target_context_matrix)
}
f <- select_window(2)
select_window <- function(window) {
target_context_matrix <- matrix(" ",length(raw_text), (2*window+1))
for (i in 1:(length(raw_text))) {
index <- (i-window):(i+window)
index[index<1|index>length(raw_text)] <- NA
print(index)
target_context_matrix[i,] <- raw_text[index]
}
target_context_matrix <- replace_na(target_context_matrix, " ")
return(target_context_matrix)
}
f <- select_window(2)
(f)
head(f)
tail(f)
target_words <- matrix(rnorm(DIMENSIONS*length(raw_text)),DIMENSIONS, length(raw_text))
DIMENSIONS <- 100
target_words <- matrix(rnorm(DIMENSIONS*length(raw_text)),DIMENSIONS, length(raw_text))
head(target_words)
colnames(target_words) <- raw_text
rownames(target_words) <- raw_text
target_words <- matrix(rnorm(DIMENSIONS*length(raw_text)),DIMENSIONS, length(raw_text))
context_words < matrix(rnorm(DIMENSIONS*length(raw_text)),length(raw_text), DIMENSIONS)
context_words < matrix(rnorm(DIMENSIONS*length(raw_text)),length(raw_text), DIMENSIONS)
context_words <- matrix(rnorm(DIMENSIONS*length(raw_text)),length(raw_text), DIMENSIONS)
colnames(target_words) <- raw_text
rownames(context_words) <- raw_text
target_words["the"]
target_words["sense"]
names(target_words["sense"])
namestarget_words[,"sense"]
target_words[,"sense"]
target_words[,"Jane"]
target_words[,"Jane.1"]
target_words[,"Jane"]
word <- target_words[,"sense"]
tcm <- select_window(3)
window <- tcm["sense"]
dim(tcm)
select_window <- function(window) {
target_context_matrix <- matrix(" ",length(raw_text), (2*window+1))
for (i in 1:(length(raw_text))) {
index <- (i-window):(i+window)
index[index<1|index>length(raw_text)] <- NA
target_context_matrix[i,] <- raw_text[index]
}
target_context_matrix <- replace_na(target_context_matrix, " ")
rownames(target_context_matrix) <- raw_text
return(target_context_matrix)
}
tcm <- select_window(3)
window <- tcm["sense"]
window
window <- tcm["sense",]
window
install.packages("bookdown")
install.packages("bookdown")
RStudio.Version()
setwd("E:\Documents\code\employment")
setwd("E:/Documents/code/employment")
df <- read_csv("data.csv")
library(readr)
library(stringr)
library(jsonlite)
df <- read_csv("data.csv")
df
df$Sector <- df$Sector %>%
str_replace_all("[0-9]", "")
View(df)
jsonlite::toJSON(df$Sector)
jsonlite::toJSON(df)
write_json(df, "data.json")
read_csv("naics_codes.csv") %>% write_json("naics.json")
library(readr)
library(stringr)
library(jsonlite)
df <- read_csv("data.csv")
df$Sector <- df$Sector %>%
str_replace_all("[0-9]", "")
write_json(df, "data.json")
read_csv("naics_codes.csv") %>% write_json("naics.json")
naics <- read_csv("naics_codes.csv")
library(readr)
library(stringr)
library(jsonlite)
df <- read_csv("data.csv")
df$Sector <- df$Sector %>%
str_replace_all("[0-9]", "")
write_json(df, "data.json")
naics <- read_csv("naics_codes.csv")
names(naics) <- c("title", "definition")
naics %>% write_json("naics.json")
library(readr)
library(stringr)
library(jsonlite)
df <- read_csv("data.csv")
df$Sector <- df$Sector %>%
str_replace_all("[0-9]", "")
write_json(df, "data.json")
naics <- read_csv("naics_codes.csv")
names(naics) <- c("title", "definition")
naics %>% write_json("naics.json")
